<script type="text/javascript">
    "use strict";

    /* Messages to materialize toasts */
    var passwordValidationMessage = '';
    var confirmValidationMessage = '';

    /*************************************************/
    /*                            PASSWORD                             */
    /*************************************************/

    /* Images per strength */
    var lock_images = [
       '<%= staticServer %>/static/img/lock_0.png',
       '<%= staticServer %>/static/img/lock_1.png',
       '<%= staticServer %>/static/img/lock_2.png',
       '<%= staticServer %>/static/img/lock_3.png',
       '<%= staticServer %>/static/img/lock_4.png',
    ];

    /* Colors per strength */
    var password_colors = [
       '#d50000',
       '#e65100',
       '#424242',
       '#01579b',
       '#1b5e20',
    ];

    /* Messages per strength */
    var strength = {
        0: "<%= __('app.profile.password.meter.0') %>",
        1: "<%= __('app.profile.password.meter.1') %>",
        2: "<%= __('app.profile.password.meter.2') %>",
        3: "<%= __('app.profile.password.meter.3') %>",
        4: "<%= __('app.profile.password.meter.4') %>",
    };

    /* Clear all password and confirm password fields */
    function clearPasswordMessage() {
        /* Clear retype password fields */
        confirmValidationMessage = '';
        $("#confirm-validation").css("display", "none");
        $("#confirm-password").val('');
        $("#confirm-validation-success").css("display", "none");
        $("#confirm-validation-error").css("display", "none");
        $("#confirm-font-success").html(confirmValidationMessage);

        /* Clear password fields */
        passwordValidationMessage = '';
        $("#password-validation-result").css("display", "none");
        $("#password-font-result").html(passwordValidationMessage);
        $("#password-font-result").css("color", "#fff" );
        $("#password-image").css("display", "none");
    };

    /* Validate password */
    function validatePassword(password,callback) {
        if (typeof password != 'undefined' && password !== undefined && password !== "") {
            /* Validate with meter */
            var result = zxcvbn(password);

            /* Callback score */
            return callback(true,result.score);
        }
        /* No error or success */
        return callback(false);
    };

    /* Show messages in password validation */
    function setupPasswordMessage(typed,score) {
        if (typed) {
            passwordValidationMessage = strength[score];
            $("#password-validation-result").css("display", "block");
            $("#password-font-result").html(passwordValidationMessage);
            $("#password-font-result").css("color", password_colors[score]);
            $("#password-image").css("display", "block");
            $("#password-image").attr("src", lock_images[score]);
        }
    };

    /* If password is changed (keyup), validate it */
    $("#password").keyup(function(){
        clearPasswordMessage();
        var password = $("#password").val();
        validatePassword(password,function(typed,score){
            setupPasswordMessage(typed,score);
        });
    });

    /*************************************************/
    /*                    CONFIRM PASSWORD                     */
    /*************************************************/

    /* Clear all confirm password fields */
    function clearConfirmPasswordMessage() {
        confirmValidationMessage = '';
        $("#confirm-validation").css("display", "none");
        $("#confirm-validation-success").css("display", "none");
        $("#confirm-validation-error").css("display", "none");
        $("#confirm-font-success").html(confirmValidationMessage);
    };

    /* Validate confirm password */
    function validateConfirmPassword(password,confirmPassword,callback) {
        if (shared.validateConfirmPassword(password,confirmPassword)) {
            callback(true,undefined,"<%= __('app.profile.confirm.success') %>");
        } else {
            callback(true,"<%= __('app.profile.confirm.error') %>");
        }
    };

    /* Show messages in confirm password validation */
    function setupConfirmPasswordMessage(typed,error,success) {
        if (typed) {
            $("#confirm-validation").css("display", "block");
            if (error) {
                confirmValidationMessage = error;
                $("#confirm-validation-error").css("display", "block");
                $("#confirm-font-error").html(confirmValidationMessage);
            } else if (success) {
                confirmValidationMessage = success;
                $("#confirm-validation-success").css("display", "block");
                $("#confirm-font-success").html(confirmValidationMessage);
            }
        }
    };

    /* If confirm password is changed (keyup), validate it */
    $("#confirm-password").keyup(function(){
        clearConfirmPasswordMessage();
        var password = $("#password").val();
        var confirmPassword = $("#confirm-password").val();
        validateConfirmPassword(password,confirmPassword,function(typed,error,success){
            setupConfirmPasswordMessage(typed,error,success);
        });
    });
</script>